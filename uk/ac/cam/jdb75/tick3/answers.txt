1. FibonacciCache methods:
    
    public static void store() {
        for (int i = 0; i < fib.length; i++) {
            fib[i] = (i == 0 || i == 1) ? 1L : fib[i-1] + fib[i-2];
        }
    }

    public static void reset() {
        for (int i = 0; i < fib.length; i++) {
            fib[i] = 0L;
        }
    }

    public static long get(int i) {
        return (i >= fib.length || i < 0) ? -1L : fib[i];
    }

2. Code copied into main method.
3. Output will be 0, 2, 2, 1, due to the same piece of memory being updated each time (and in the first case, the post increment operator returns the old value).
